1.安装git
国外：git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
国内：git clone https://source.codeaurora.org/quic/lc/chromium/tools/depot_tools


2.把depot_tools目录加入
export PATH=`pwd`/depot_tools:"$PATH"




3.下源码
export GYP_DEFINES="OS=linux"
fetch --nohooks webrtc

Still working on:
[0:35:12]   src/third_party
[0:35:12]   src/tools


gclient sync

下载源码后third_party，git显示有修改标记，属于正常，编译可以通过
4,编译

cd src
sudo ./build/install-build-deps.sh

export PATH=$PATH:`pwd`/depot_tools
方式一：使用gn生成：
生成debug版ninja项目文件：gn gen out/Default
生成release版ninja项目文件：gn gen out/Default --args='is_debug=false'
清空ninja项目文件：gn clean out/Default

ninja -C out/Default

*************************************************************************************
最后的编译选项：


gn gen out/linux --args='target_os="linux" target_cpu="x64" is_debug=false is_clang=false treat_warnings_as_errors=false rtc_include_tests=false is_component_build=false use_custom_libcxx=false rtc_enable_protobuf=false'

――――――――――――――――
4,编译 -arm
cd src
./build/install-build-deps.sh --arm
./build/linux/sysroot_scripts/install-sysroot.py --arch=arm

 gn gen out/Default --args='target_os="linux" target_cpu="arm"'

    ninja -C out/Default

ninja -C out/Default



*************************************************************************************

webrtc编译使用gn+ninja

其中，gn类似cmakelist.txt，用于说明编译的目标，编译的内容，编译的依赖。
ninja 类似makefile，会去调用编译程序进行编译操作，其依赖的文件是build.ninja

理论上修改为arm-linux-gxx是可行的，只需在toolchain,ninja中修改clang编译器为arm-linx-gxx即可。

应该是加上参数(custom_toolchain)
./build/config/BUILDCONFIG.gn:264:  set_default_toolchain(custom_toolchain)
./build/config/BUILDCONFIG.gn:266:  set_default_toolchain(_default_toolchain)




*************************************************************************************
export PATH=`pwd`/depot_tools:"$PATH"
export GYP_DEFINES="OS=android"
fetch --nohooks webrtc_android

gclient sync

cd src
sudo ./build/install-build-deps.sh

gn gen out/Default --args='target_os="android" target_cpu="arm"'
gn gen out/Default --args='target_os="android" target_cpu="arm64"'
ninja -C out/Default

遇到权限问题可以直接切换root用户
su

注意需要事先安装java jdk且必须大于1.8版本
ubuntu14:
1. 添加openjdk8的第三方源
sudo add-apt-repository ppa:openjdk-r/ppa
2. 执行更新
apt-get update
3. 安装openjdk8
sudo apt-get install openjdk-8-jdk
4. 选择版本
sudo update-alternatives --config java
5. 确认安装成功
java -version
openjdk version "1.8.0_91"

其他版本ubuntu建议直接安装openjdk8
sudo apt-get install openjdk-8-jdk


*************************************************************************************
G:\WebRTC_Comp\webrtc\src\build\config\BUILDCONFIG.gn
if (custom_toolchain != "") {
  set_default_toolchain(custom_toolchain)
} else if (_default_toolchain != "") {
  set_default_toolchain(_default_toolchain)
}

可见配置编译参数custom_toolchain 可实现交叉编译